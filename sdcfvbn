try {
      await updateDoc(doc(db, "chats", chatId), {
        messages: arrayUnion({
          senderId: currentUser.id,
          text,
          createdAt: new Date(),
        }),
      });

      const userIDs = [currentUser.id, user.id];

      userIDs.forEach(async (id) => {
        const userchatsRef = doc(db, "userchats", id);
        const userChatsSnapshot = await getDoc(userchatsRef);

        if (userChatsSnapshot.exists()) {
          const userChatsData = userChatsSnapshot.data();

          const chatIndex = userChatsData.chats.findIndex(
            (c) => c.chatId === chatId
          );

          userChatsData.chats[chatIndex].lastMessage = text;
          userChatsData.chats[chatIndex].isSeen =
            id === currentUser.id ? true : false;
          userChatsData.chats[chatIndex].updatedAt = Date.now();

          await updateDoc(userchatsRef, {
            chats: userChatsData.chats,
          });
        }
      });
    } catch (err) {
      console.log(err);
    }
  };


  {chat?.messages?.map((mes) => {
    <div className="message own" key={mes?.createAt}>
      <div className="texts">
        {mes.img && <img src={mes.img} alt="" />}
        <p>{mes.text}</p>
        {/* <span>{message.createdAt}</span> */}
      </div>
    </div>;
  })}

  {chat?.messages?.map((mes) => (
    <div className="message own" key={mes?.createAt}>
      <div className="texts">
        {mes.img && <img src={mes.img} alt="" />}
        <p>{mes.text}</p>
        {/* <span>{message.createdAt}</span> */}
      </div>
    </div>
  ))}